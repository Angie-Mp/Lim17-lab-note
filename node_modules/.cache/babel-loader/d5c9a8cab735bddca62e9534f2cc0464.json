{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/Lim17-lab-note/src/components/EnterApp/Home/Crud/Create.js\",\n    _s = $RefreshSig$();\n\nimport { db } from \"../../../../firebase/connection.js\"; //import { uid } from \"uid\";\n\nimport { collection, addDoc, Timestamp, query, orderBy, onSnapshot } from 'firebase/firestore';\nimport { useState, useEffect } from \"react\";\nimport { doc, updateDoc } from \"firebase/firestore\";\nimport Task from '../Task.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Post() {\n  _s();\n\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    try {\n      await addDoc(collection(db, 'tasks'), {\n        title: title,\n        description: description,\n        completed: false,\n        created: Timestamp.now()\n      }); // onClose()\n    } catch (err) {\n      alert(err);\n    }\n  }; ////////mostrar en pantalla ///////\n\n\n  const [openAddModal, setOpenAddModal] = useState(false);\n  const [tasks, setTasks] = useState([]);\n  /* function to get all tasks from firestore in realtime */\n\n  useEffect(() => {\n    const taskColRef = query(collection(db, 'tasks'), orderBy('created', 'desc'));\n    onSnapshot(taskColRef, snapshot => {\n      setTasks(snapshot.docs.map(doc => ({\n        id: doc.id,\n        data: doc.data()\n      })));\n    });\n  }, []); //////// editar ///////\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"addTask\",\n      name: \"addTask\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"title\",\n        onChange: e => setTitle(e.target.value.toUpperCase()),\n        value: title,\n        placeholder: \"Enter title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        onChange: e => setDescription(e.target.value),\n        placeholder: \"Enter task decription\",\n        value: description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Done\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"taskManager__tasks\",\n      children: tasks.map(task => /*#__PURE__*/_jsxDEV(Task, {\n        id: task.id,\n        completed: task.data.completed,\n        title: task.data.title,\n        description: task.data.description\n      }, task.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 3\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Post, \"6hWhUFEPXo8LQ4+PWEK+KVmiDFs=\");\n\n_c = Post;\nexport default Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"names":["db","collection","addDoc","Timestamp","query","orderBy","onSnapshot","useState","useEffect","doc","updateDoc","Task","Post","title","setTitle","description","setDescription","handleSubmit","e","preventDefault","completed","created","now","err","alert","openAddModal","setOpenAddModal","tasks","setTasks","taskColRef","snapshot","docs","map","id","data","target","value","toUpperCase","task"],"sources":["/Users/mac/Documents/Lim17-lab-note/src/components/EnterApp/Home/Crud/Create.js"],"sourcesContent":["import { db } from \"../../../../firebase/connection.js\";\n//import { uid } from \"uid\";\nimport {collection, addDoc, Timestamp,query, orderBy, onSnapshot} from 'firebase/firestore'\nimport { useState, useEffect } from \"react\";\n\nimport { doc, updateDoc } from \"firebase/firestore\";\n\nimport Task from '../Task.js'\n\n\nfunction Post() {\n  const [title, setTitle] = useState('')\n  const [description, setDescription] = useState('')\n\n  const handleSubmit = async (e) => {\n    e.preventDefault()\n    try {\n      await addDoc(collection(db, 'tasks'), {\n        title: title,\n        description: description,\n        completed: false,\n        created: Timestamp.now()\n      })\n     // onClose()\n    } catch (err) {\n      alert(err)\n    }\n  }\n  ////////mostrar en pantalla ///////\n  const [openAddModal, setOpenAddModal] = useState(false)\n  const [tasks, setTasks] = useState([])\n\n  /* function to get all tasks from firestore in realtime */ \n  useEffect(() => {\n    const taskColRef = query(collection(db, 'tasks'), orderBy('created', 'desc'))\n    onSnapshot(taskColRef, (snapshot) => {\n      setTasks(snapshot.docs.map(doc => ({\n        id: doc.id,\n        data: doc.data()\n      })))\n    })\n  },[])\n\n    //////// editar ///////\n\n\n\n  return (\n    <div>\n\n      <form onSubmit={handleSubmit} className='addTask' name='addTask'>\n        <input \n          type='text' \n          name='title' \n          onChange={(e) => setTitle(e.target.value.toUpperCase())} \n          value={title}\n          placeholder='Enter title'/>\n        <textarea \n          onChange={(e) => setDescription(e.target.value)}\n          placeholder='Enter task decription'\n          value={description}></textarea>\n        <button type='submit'>Done</button>\n      </form> \n\n      <div className='taskManager__tasks'>\n\n{tasks.map((task) => (\n  <Task\n    id={task.id}\n    key={task.id}\n    completed={task.data.completed}\n    title={task.data.title} \n    description={task.data.description}\n  />\n))}\n\n</div>\n\n      </div>\n     \n  )\n\n\n}\n\nexport default Post;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}