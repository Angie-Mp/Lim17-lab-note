{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/Lim17-lab-note/src/components/EnterApp/Home/Crud/Edit.js\",\n    _s = $RefreshSig$();\n\n//import Modal from \"./Modal\"\nimport { useState } from 'react';\nimport { doc, updateDoc } from \"firebase/firestore\";\nimport { db } from '../../../../firebase/connection.js';\nimport Swal from 'sweetalert2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EditTask(_ref) {\n  _s();\n\n  let {\n    open,\n    onClose,\n    toEditTitle,\n    toEditDescription,\n    id\n  } = _ref;\n  const [title, setTitle] = useState(toEditTitle);\n  const [description, setDescription] = useState(toEditDescription); // function to update firestore \n\n  const handleUpdate = async e => {\n    e.preventDefault();\n    const taskDocRef = doc(db, 'notas', id);\n\n    try {\n      await updateDoc(taskDocRef, {\n        title: title,\n        description: description\n      });\n      onClose();\n    } catch (err) {\n      alert(err);\n    }\n  }; /////////////\n\n\n  Swal.fire({\n    title: \"Tu nombre\",\n    input: \"text\",\n    value: \"title\",\n    showCancelButton: true,\n    confirmButtonText: \"Guardar\",\n    cancelButtonText: \"Cancelar\"\n  }).then(resultado => {\n    const taskDocRef = doc(db, 'notas', id);\n\n    try {\n      updateDoc(taskDocRef, {\n        title: title,\n        description: description\n      });\n      onClose();\n    } catch (err) {\n      alert(err);\n    }\n\n    if (resultado.value) {\n      let title = resultado.value;\n      console.log(\"Hola, \" + title);\n    }\n  }); /////\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleUpdate,\n    className: \"editTask\",\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [title, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 6\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 7\n  }, this);\n}\n\n_s(EditTask, \"TchmB0De3CMtZxroHivBEqMixPE=\");\n\n_c = EditTask;\nexport default EditTask;\n/*\n\n\n//import Modal from \"./Modal\"\nimport {useState} from 'react'\nimport { doc, updateDoc } from \"firebase/firestore\";\nimport {db} from '../../../../firebase/connection.js'\nimport Swal from 'sweetalert2'\n\n\nfunction EditTask({open, onClose, toEditTitle, toEditDescription, id}) {\n\n  const [title, setTitle] = useState(toEditTitle)\n  const [description, setDescription] = useState(toEditDescription)\n\n  // function to update firestore \n  const handleUpdate = async (e) => {\n    e.preventDefault()\n    const taskDocRef = doc(db, 'notas', id)\n    try{\n      await updateDoc(taskDocRef, {\n        title: title,\n        description: description\n      })\n      onClose()\n    } catch (err) {\n      alert(err)\n    }\n    \n  }\n  /////////////\n\n  /////\n  \n  return (\n      <form onSubmit={handleUpdate} className='editTask'>\n        <input type='text' name='title' onChange={(e) => setTitle(e.target.value.toUpperCase())} value={title}/>\n        <textarea onChange={(e) => setDescription(e.target.value)} value={description}></textarea>\n        <button type='submit'>Editar</button>\n      </form> \n  )\n\n}\n\nexport default EditTask\n*/\n\nvar _c;\n\n$RefreshReg$(_c, \"EditTask\");","map":{"version":3,"names":["useState","doc","updateDoc","db","Swal","EditTask","open","onClose","toEditTitle","toEditDescription","id","title","setTitle","description","setDescription","handleUpdate","e","preventDefault","taskDocRef","err","alert","fire","input","value","showCancelButton","confirmButtonText","cancelButtonText","then","resultado","console","log"],"sources":["/Users/mac/Documents/Lim17-lab-note/src/components/EnterApp/Home/Crud/Edit.js"],"sourcesContent":["//import Modal from \"./Modal\"\nimport {useState} from 'react'\nimport { doc, updateDoc } from \"firebase/firestore\";\nimport {db} from '../../../../firebase/connection.js'\nimport Swal from 'sweetalert2'\n\n\nfunction EditTask({open, onClose, toEditTitle, toEditDescription, id}) {\n\n  const [title, setTitle] = useState(toEditTitle)\n  const [description, setDescription] = useState(toEditDescription)\n\n  // function to update firestore \n  const handleUpdate = async (e) => {\n    e.preventDefault()\n    const taskDocRef = doc(db, 'notas', id)\n    try{\n      await updateDoc(taskDocRef, {\n        title: title,\n        description: description\n      })\n      onClose()\n    } catch (err) {\n      alert(err)\n    }\n    \n  }\n  /////////////\n\n  Swal\n    .fire({\n        title: \"Tu nombre\",\n        input: \"text\",\n        value:\"title\",\n        showCancelButton: true,\n        confirmButtonText: \"Guardar\",\n        cancelButtonText: \"Cancelar\",\n    })\n    .then(resultado => {\n      const taskDocRef = doc(db, 'notas', id)\n    try{\n       updateDoc(taskDocRef, {\n        title: title,\n        description: description\n      })\n      onClose()\n    } catch (err) {\n      alert(err)\n    }\n        if (resultado.value) {\n            let title = resultado.value;\n            console.log(\"Hola, \" + title);\n        }\n    });\n  /////\n  \n  return (\n      <form onSubmit={handleUpdate} className='editTask'>\n     <p>{title} </p>\n      </form> \n  )\n\n}\n\nexport default EditTask\n\n\n\n\n/*\n\n\n//import Modal from \"./Modal\"\nimport {useState} from 'react'\nimport { doc, updateDoc } from \"firebase/firestore\";\nimport {db} from '../../../../firebase/connection.js'\nimport Swal from 'sweetalert2'\n\n\nfunction EditTask({open, onClose, toEditTitle, toEditDescription, id}) {\n\n  const [title, setTitle] = useState(toEditTitle)\n  const [description, setDescription] = useState(toEditDescription)\n\n  // function to update firestore \n  const handleUpdate = async (e) => {\n    e.preventDefault()\n    const taskDocRef = doc(db, 'notas', id)\n    try{\n      await updateDoc(taskDocRef, {\n        title: title,\n        description: description\n      })\n      onClose()\n    } catch (err) {\n      alert(err)\n    }\n    \n  }\n  /////////////\n\n  /////\n  \n  return (\n      <form onSubmit={handleUpdate} className='editTask'>\n        <input type='text' name='title' onChange={(e) => setTitle(e.target.value.toUpperCase())} value={title}/>\n        <textarea onChange={(e) => setDescription(e.target.value)} value={description}></textarea>\n        <button type='submit'>Editar</button>\n      </form> \n  )\n\n}\n\nexport default EditTask\n*/"],"mappings":";;;AAAA;AACA,SAAQA,QAAR,QAAuB,OAAvB;AACA,SAASC,GAAT,EAAcC,SAAd,QAA+B,oBAA/B;AACA,SAAQC,EAAR,QAAiB,oCAAjB;AACA,OAAOC,IAAP,MAAiB,aAAjB;;;AAGA,SAASC,QAAT,OAAuE;EAAA;;EAAA,IAArD;IAACC,IAAD;IAAOC,OAAP;IAAgBC,WAAhB;IAA6BC,iBAA7B;IAAgDC;EAAhD,CAAqD;EAErE,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAACQ,WAAD,CAAlC;EACA,MAAM,CAACK,WAAD,EAAcC,cAAd,IAAgCd,QAAQ,CAACS,iBAAD,CAA9C,CAHqE,CAKrE;;EACA,MAAMM,YAAY,GAAG,MAAOC,CAAP,IAAa;IAChCA,CAAC,CAACC,cAAF;IACA,MAAMC,UAAU,GAAGjB,GAAG,CAACE,EAAD,EAAK,OAAL,EAAcO,EAAd,CAAtB;;IACA,IAAG;MACD,MAAMR,SAAS,CAACgB,UAAD,EAAa;QAC1BP,KAAK,EAAEA,KADmB;QAE1BE,WAAW,EAAEA;MAFa,CAAb,CAAf;MAIAN,OAAO;IACR,CAND,CAME,OAAOY,GAAP,EAAY;MACZC,KAAK,CAACD,GAAD,CAAL;IACD;EAEF,CAbD,CANqE,CAoBrE;;;EAEAf,IAAI,CACDiB,IADH,CACQ;IACFV,KAAK,EAAE,WADL;IAEFW,KAAK,EAAE,MAFL;IAGFC,KAAK,EAAC,OAHJ;IAIFC,gBAAgB,EAAE,IAJhB;IAKFC,iBAAiB,EAAE,SALjB;IAMFC,gBAAgB,EAAE;EANhB,CADR,EASGC,IATH,CASQC,SAAS,IAAI;IACjB,MAAMV,UAAU,GAAGjB,GAAG,CAACE,EAAD,EAAK,OAAL,EAAcO,EAAd,CAAtB;;IACF,IAAG;MACAR,SAAS,CAACgB,UAAD,EAAa;QACrBP,KAAK,EAAEA,KADc;QAErBE,WAAW,EAAEA;MAFQ,CAAb,CAAT;MAIDN,OAAO;IACR,CAND,CAME,OAAOY,GAAP,EAAY;MACZC,KAAK,CAACD,GAAD,CAAL;IACD;;IACG,IAAIS,SAAS,CAACL,KAAd,EAAqB;MACjB,IAAIZ,KAAK,GAAGiB,SAAS,CAACL,KAAtB;MACAM,OAAO,CAACC,GAAR,CAAY,WAAWnB,KAAvB;IACH;EACJ,CAxBH,EAtBqE,CA+CrE;;EAEA,oBACI;IAAM,QAAQ,EAAEI,YAAhB;IAA8B,SAAS,EAAC,UAAxC;IAAA,uBACD;MAAA,WAAIJ,KAAJ;IAAA;MAAA;MAAA;MAAA;IAAA;EADC;IAAA;IAAA;IAAA;EAAA,QADJ;AAMD;;GAvDQN,Q;;KAAAA,Q;AAyDT,eAAeA,QAAf;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}