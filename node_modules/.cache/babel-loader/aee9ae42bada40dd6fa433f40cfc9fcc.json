{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/Lim17-lab-note/src/components/EnterApp/Home/Crud/Edit.js\",\n    _s = $RefreshSig$();\n\n//import Modal from \"./Modal\"\nimport { useState } from 'react';\nimport { doc, updateDoc } from \"firebase/firestore\";\nimport { db } from '../../../../firebase/connection.js';\nimport Swal from 'sweetalert2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EditTask(_ref) {\n  _s();\n\n  let {\n    open,\n    onClose,\n    toEditTitle,\n    toEditDescription,\n    id\n  } = _ref;\n  const [title, setTitle] = useState(toEditTitle);\n  const [description, setDescription] = useState(toEditDescription); // function to update firestore \n\n  const handleUpdate = async e => {\n    e.preventDefault();\n    const taskDocRef = doc(db, 'notas', id);\n\n    try {\n      await updateDoc(taskDocRef, {\n        title: title,\n        description: description\n      });\n      onClose();\n    } catch (err) {\n      alert(err);\n    }\n  };\n\n  const {\n    value: text\n  } = Swal.fire({\n    input: 'text',\n    inputLabel: 'Message',\n    inputPlaceholder: 'Type your message here...',\n    inputAttributes: {\n      'aria-label': 'Type your message here'\n    },\n    showCancelButton: true\n  });\n\n  if (text) {\n    Swal.fire(text);\n  } //////\n\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleUpdate,\n    className: \"editTask\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"title\",\n      onChange: e => setTitle(e.target.value.toUpperCase()),\n      value: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      onChange: e => setDescription(e.target.value),\n      value: description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Editar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 7\n  }, this);\n}\n\n_s(EditTask, \"TchmB0De3CMtZxroHivBEqMixPE=\");\n\n_c = EditTask;\nexport default EditTask;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditTask\");","map":{"version":3,"names":["useState","doc","updateDoc","db","Swal","EditTask","open","onClose","toEditTitle","toEditDescription","id","title","setTitle","description","setDescription","handleUpdate","e","preventDefault","taskDocRef","err","alert","value","text","fire","input","inputLabel","inputPlaceholder","inputAttributes","showCancelButton","target","toUpperCase"],"sources":["/Users/mac/Documents/Lim17-lab-note/src/components/EnterApp/Home/Crud/Edit.js"],"sourcesContent":["\n\n//import Modal from \"./Modal\"\nimport {useState} from 'react'\nimport { doc, updateDoc } from \"firebase/firestore\";\nimport {db} from '../../../../firebase/connection.js'\nimport Swal from 'sweetalert2'\n\n\nfunction EditTask({open, onClose, toEditTitle, toEditDescription, id}) {\n\n  const [title, setTitle] = useState(toEditTitle)\n  const [description, setDescription] = useState(toEditDescription)\n\n  // function to update firestore \n  const handleUpdate = async (e) => {\n    e.preventDefault()\n    const taskDocRef = doc(db, 'notas', id)\n    try{\n      await updateDoc(taskDocRef, {\n        title: title,\n        description: description\n      })\n      onClose()\n    } catch (err) {\n      alert(err)\n    }\n    \n  }\n  const { value: text } =  Swal.fire({\n    input: 'text',\n    inputLabel: 'Message',\n    inputPlaceholder: 'Type your message here...',\n    inputAttributes: {\n      'aria-label': 'Type your message here'\n    },\n    showCancelButton: true\n  })\n  \n  if (text) {\n    Swal.fire(text)\n  }\n  //////\n  return (\n      <form onSubmit={handleUpdate} className='editTask'>\n        <input type='text' name='title' onChange={(e) => setTitle(e.target.value.toUpperCase())} value={title}/>\n        <textarea onChange={(e) => setDescription(e.target.value)} value={description}></textarea>\n        <button type='submit'>Editar</button>\n      </form> \n  )\n}\n\nexport default EditTask\n\n"],"mappings":";;;AAEA;AACA,SAAQA,QAAR,QAAuB,OAAvB;AACA,SAASC,GAAT,EAAcC,SAAd,QAA+B,oBAA/B;AACA,SAAQC,EAAR,QAAiB,oCAAjB;AACA,OAAOC,IAAP,MAAiB,aAAjB;;;AAGA,SAASC,QAAT,OAAuE;EAAA;;EAAA,IAArD;IAACC,IAAD;IAAOC,OAAP;IAAgBC,WAAhB;IAA6BC,iBAA7B;IAAgDC;EAAhD,CAAqD;EAErE,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAACQ,WAAD,CAAlC;EACA,MAAM,CAACK,WAAD,EAAcC,cAAd,IAAgCd,QAAQ,CAACS,iBAAD,CAA9C,CAHqE,CAKrE;;EACA,MAAMM,YAAY,GAAG,MAAOC,CAAP,IAAa;IAChCA,CAAC,CAACC,cAAF;IACA,MAAMC,UAAU,GAAGjB,GAAG,CAACE,EAAD,EAAK,OAAL,EAAcO,EAAd,CAAtB;;IACA,IAAG;MACD,MAAMR,SAAS,CAACgB,UAAD,EAAa;QAC1BP,KAAK,EAAEA,KADmB;QAE1BE,WAAW,EAAEA;MAFa,CAAb,CAAf;MAIAN,OAAO;IACR,CAND,CAME,OAAOY,GAAP,EAAY;MACZC,KAAK,CAACD,GAAD,CAAL;IACD;EAEF,CAbD;;EAcA,MAAM;IAAEE,KAAK,EAAEC;EAAT,IAAmBlB,IAAI,CAACmB,IAAL,CAAU;IACjCC,KAAK,EAAE,MAD0B;IAEjCC,UAAU,EAAE,SAFqB;IAGjCC,gBAAgB,EAAE,2BAHe;IAIjCC,eAAe,EAAE;MACf,cAAc;IADC,CAJgB;IAOjCC,gBAAgB,EAAE;EAPe,CAAV,CAAzB;;EAUA,IAAIN,IAAJ,EAAU;IACRlB,IAAI,CAACmB,IAAL,CAAUD,IAAV;EACD,CAhCoE,CAiCrE;;;EACA,oBACI;IAAM,QAAQ,EAAEP,YAAhB;IAA8B,SAAS,EAAC,UAAxC;IAAA,wBACE;MAAO,IAAI,EAAC,MAAZ;MAAmB,IAAI,EAAC,OAAxB;MAAgC,QAAQ,EAAGC,CAAD,IAAOJ,QAAQ,CAACI,CAAC,CAACa,MAAF,CAASR,KAAT,CAAeS,WAAf,EAAD,CAAzD;MAAyF,KAAK,EAAEnB;IAAhG;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAU,QAAQ,EAAGK,CAAD,IAAOF,cAAc,CAACE,CAAC,CAACa,MAAF,CAASR,KAAV,CAAzC;MAA2D,KAAK,EAAER;IAAlE;MAAA;MAAA;MAAA;IAAA,QAFF,eAGE;MAAQ,IAAI,EAAC,QAAb;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAHF;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAOD;;GAzCQR,Q;;KAAAA,Q;AA2CT,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}