{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/Lim17-lab-note/src/components/EnterApp/Home/Crud/Edit.js\",\n    _s = $RefreshSig$();\n\n//import Modal from \"./Modal\"\nimport { useState } from 'react';\nimport { doc, updateDoc } from \"firebase/firestore\";\nimport { db } from '../../../../firebase/connection.js';\nimport Swal from 'sweetalert2';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport Modal from 'react-modal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst customStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)'\n  }\n};\n\nfunction EditTask(_ref) {\n  _s();\n\n  let {\n    open,\n    onClose,\n    toEditTitle,\n    toEditDescription,\n    id\n  } = _ref;\n  let subtitle;\n  const [modalIsOpen, setIsOpen] = React.useState(false);\n\n  function openModal() {\n    setIsOpen(true);\n  }\n\n  function afterOpenModal() {\n    // references are now sync'd and can be accessed.\n    subtitle.style.color = '#f00';\n  }\n\n  function closeModal() {\n    setIsOpen(false);\n  }\n\n  const handleClose = e => {\n    if (e.target.className === 'modalContainer') {\n      onClose();\n    }\n\n    return null;\n  }; /////////////\n\n\n  const [title, setTitle] = useState(toEditTitle);\n  const [description, setDescription] = useState(toEditDescription); // function to update firestore \n\n  const handleUpdate = async e => {\n    e.preventDefault();\n    const taskDocRef = doc(db, 'notas', id);\n\n    try {\n      await updateDoc(taskDocRef, {\n        title: title,\n        description: description\n      });\n      onClose();\n    } catch (err) {\n      alert(err);\n    }\n  }; /////\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modalContainer\",\n    onClick: handleClose,\n    children: /*#__PURE__*/_jsxDEV(Modal, {\n      onClose: onClose,\n      open: open,\n      style: customStyles,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleUpdate,\n        className: \"editTask\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"title\",\n          onChange: e => setTitle(e.target.value.toUpperCase()),\n          value: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          onChange: e => setDescription(e.target.value),\n          value: description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Editar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 8\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n\n_s(EditTask, \"kG8rkZk5Mxkbc26VcMKUJJOQZFk=\");\n\n_c = EditTask;\nexport default EditTask;\n/*\n\n\n//import Modal from \"./Modal\"\nimport {useState} from 'react'\nimport { doc, updateDoc } from \"firebase/firestore\";\nimport {db} from '../../../../firebase/connection.js'\nimport Swal from 'sweetalert2'\n\n\nfunction EditTask({open, onClose, toEditTitle, toEditDescription, id}) {\n\n  const [title, setTitle] = useState(toEditTitle)\n  const [description, setDescription] = useState(toEditDescription)\n\n  // function to update firestore \n  const handleUpdate = async (e) => {\n    e.preventDefault()\n    const taskDocRef = doc(db, 'notas', id)\n    try{\n      await updateDoc(taskDocRef, {\n        title: title,\n        description: description\n      })\n      onClose()\n    } catch (err) {\n      alert(err)\n    }\n    \n  }\n  /////////////\n\n  /////\n  \n  return (\n      <form onSubmit={handleUpdate} className='editTask'>\n        <input type='text' name='title' onChange={(e) => setTitle(e.target.value.toUpperCase())} value={title}/>\n        <textarea onChange={(e) => setDescription(e.target.value)} value={description}></textarea>\n        <button type='submit'>Editar</button>\n      </form> \n  )\n\n}\n\nexport default EditTask\n*/\n\n/*\ncon modal\n\n//import Modal from \"./Modal\"\nimport {useState} from 'react'\nimport { doc, updateDoc } from \"firebase/firestore\";\nimport {db} from '../../../../firebase/connection.js'\nimport Swal from 'sweetalert2'\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport Modal from 'react-modal';\n\nconst customStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)',\n  },\n};\nfunction EditTask({open, onClose, toEditTitle, toEditDescription, id}) {\n  let subtitle;\n  const [modalIsOpen, setIsOpen] = React.useState(false);\n\n  function openModal() {\n    setIsOpen(true);\n  }\n\n  function afterOpenModal() {\n    // references are now sync'd and can be accessed.\n    subtitle.style.color = '#f00';\n  }\n\n  function closeModal() {\n    setIsOpen(false);\n  }\n\n  /////////////\n  const [title, setTitle] = useState(toEditTitle)\n  const [description, setDescription] = useState(toEditDescription)\n\n  // function to update firestore \n  const handleUpdate = async (e) => {\n    e.preventDefault()\n    const taskDocRef = doc(db, 'notas', id)\n    try{\n      await updateDoc(taskDocRef, {\n        title: title,\n        description: description\n      })\n      onClose()\n    } catch (err) {\n      alert(err)\n    }\n    \n  }\n  /////\n  \n  return (\n    <div>\n    <button onClick={openModal}>Open Modal</button>\n    <Modal\n      isOpen={modalIsOpen}\n      onAfterOpen={afterOpenModal}\n      onRequestClose={closeModal}\n      style={customStyles}\n      contentLabel=\"Example Modal\"\n    >\n       <form onSubmit={handleUpdate} className='editTask'>\n        <input type='text' name='title' onChange={(e) => setTitle(e.target.value.toUpperCase())} value={title}/>\n        <textarea onChange={(e) => setDescription(e.target.value)} value={description}></textarea>\n        <button type='submit'>Editar</button>\n      </form> \n\n    </Modal>\n  </div>\n);\n  \n\n}\n\nexport default EditTask\n*/\n\nvar _c;\n\n$RefreshReg$(_c, \"EditTask\");","map":{"version":3,"names":["useState","doc","updateDoc","db","Swal","React","ReactDOM","Modal","customStyles","content","top","left","right","bottom","marginRight","transform","EditTask","open","onClose","toEditTitle","toEditDescription","id","subtitle","modalIsOpen","setIsOpen","openModal","afterOpenModal","style","color","closeModal","handleClose","e","target","className","title","setTitle","description","setDescription","handleUpdate","preventDefault","taskDocRef","err","alert","value","toUpperCase"],"sources":["/Users/mac/Documents/Lim17-lab-note/src/components/EnterApp/Home/Crud/Edit.js"],"sourcesContent":["//import Modal from \"./Modal\"\nimport {useState} from 'react'\nimport { doc, updateDoc } from \"firebase/firestore\";\nimport {db} from '../../../../firebase/connection.js'\nimport Swal from 'sweetalert2'\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport Modal from 'react-modal';\n\nconst customStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)',\n  },\n};\nfunction EditTask({open, onClose, toEditTitle, toEditDescription, id}) {\n  let subtitle;\n  const [modalIsOpen, setIsOpen] = React.useState(false);\n\n  function openModal() {\n    setIsOpen(true);\n  }\n\n  function afterOpenModal() {\n    // references are now sync'd and can be accessed.\n    subtitle.style.color = '#f00';\n  }\n\n  function closeModal() {\n    setIsOpen(false);\n  }\n\n\n\n  const handleClose = (e) => {\n    if(e.target.className === 'modalContainer'){\n      onClose()\n    }\n    return null\n  }\n  /////////////\n  const [title, setTitle] = useState(toEditTitle)\n  const [description, setDescription] = useState(toEditDescription)\n\n  // function to update firestore \n  const handleUpdate = async (e) => {\n    e.preventDefault()\n    const taskDocRef = doc(db, 'notas', id)\n    try{\n      await updateDoc(taskDocRef, {\n        title: title,\n        description: description\n      })\n      onClose()\n    } catch (err) {\n      alert(err)\n    }\n    \n  }\n  /////\n  \n  return (\n    <div className='modalContainer' onClick={handleClose}>\n          <Modal\n   onClose={onClose} open={open}\n      style={customStyles}\n  \n    >\n       <form onSubmit={handleUpdate} className='editTask'>\n        \n        <input type='text' name='title' onChange={(e) => setTitle(e.target.value.toUpperCase())} value={title}/>\n        <textarea onChange={(e) => setDescription(e.target.value)} value={description}></textarea>\n        <button type='submit'>Editar</button>\n      </form> \n\n    </Modal>\n  </div>\n);\n  \n\n}\n\nexport default EditTask\n\n\n\n/*\n\n\n//import Modal from \"./Modal\"\nimport {useState} from 'react'\nimport { doc, updateDoc } from \"firebase/firestore\";\nimport {db} from '../../../../firebase/connection.js'\nimport Swal from 'sweetalert2'\n\n\nfunction EditTask({open, onClose, toEditTitle, toEditDescription, id}) {\n\n  const [title, setTitle] = useState(toEditTitle)\n  const [description, setDescription] = useState(toEditDescription)\n\n  // function to update firestore \n  const handleUpdate = async (e) => {\n    e.preventDefault()\n    const taskDocRef = doc(db, 'notas', id)\n    try{\n      await updateDoc(taskDocRef, {\n        title: title,\n        description: description\n      })\n      onClose()\n    } catch (err) {\n      alert(err)\n    }\n    \n  }\n  /////////////\n\n  /////\n  \n  return (\n      <form onSubmit={handleUpdate} className='editTask'>\n        <input type='text' name='title' onChange={(e) => setTitle(e.target.value.toUpperCase())} value={title}/>\n        <textarea onChange={(e) => setDescription(e.target.value)} value={description}></textarea>\n        <button type='submit'>Editar</button>\n      </form> \n  )\n\n}\n\nexport default EditTask\n*/\n\n\n/*\ncon modal\n\n//import Modal from \"./Modal\"\nimport {useState} from 'react'\nimport { doc, updateDoc } from \"firebase/firestore\";\nimport {db} from '../../../../firebase/connection.js'\nimport Swal from 'sweetalert2'\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport Modal from 'react-modal';\n\nconst customStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)',\n  },\n};\nfunction EditTask({open, onClose, toEditTitle, toEditDescription, id}) {\n  let subtitle;\n  const [modalIsOpen, setIsOpen] = React.useState(false);\n\n  function openModal() {\n    setIsOpen(true);\n  }\n\n  function afterOpenModal() {\n    // references are now sync'd and can be accessed.\n    subtitle.style.color = '#f00';\n  }\n\n  function closeModal() {\n    setIsOpen(false);\n  }\n\n  /////////////\n  const [title, setTitle] = useState(toEditTitle)\n  const [description, setDescription] = useState(toEditDescription)\n\n  // function to update firestore \n  const handleUpdate = async (e) => {\n    e.preventDefault()\n    const taskDocRef = doc(db, 'notas', id)\n    try{\n      await updateDoc(taskDocRef, {\n        title: title,\n        description: description\n      })\n      onClose()\n    } catch (err) {\n      alert(err)\n    }\n    \n  }\n  /////\n  \n  return (\n    <div>\n    <button onClick={openModal}>Open Modal</button>\n    <Modal\n      isOpen={modalIsOpen}\n      onAfterOpen={afterOpenModal}\n      onRequestClose={closeModal}\n      style={customStyles}\n      contentLabel=\"Example Modal\"\n    >\n       <form onSubmit={handleUpdate} className='editTask'>\n        <input type='text' name='title' onChange={(e) => setTitle(e.target.value.toUpperCase())} value={title}/>\n        <textarea onChange={(e) => setDescription(e.target.value)} value={description}></textarea>\n        <button type='submit'>Editar</button>\n      </form> \n\n    </Modal>\n  </div>\n);\n  \n\n}\n\nexport default EditTask\n*/"],"mappings":"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},"metadata":{},"sourceType":"module"}