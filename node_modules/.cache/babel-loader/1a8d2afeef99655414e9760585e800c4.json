{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/Lim17-lab-note/src/components/EnterApp/Home/Crud/Edit.js\",\n    _s = $RefreshSig$();\n\n//import Modal from \"./Modal\"\nimport { useState } from 'react';\nimport { doc, updateDoc } from \"firebase/firestore\";\nimport { db } from '../../../../firebase/connection.js';\nimport Swal from 'sweetalert2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst formValues = {\n  title: 'Multiple inputs',\n  html: '<input id=\"title\" class=\"swal2-input\">' + '<input id=\"description\" class=\"swal2-input\">',\n  focusConfirm: false,\n  preConfirm: () => ({\n    title: document.getElementById('title').value,\n    description: document.getElementById('description').value\n  })\n}; ///////////////\n\nfunction EditTask(_ref) {\n  _s();\n\n  let {\n    open,\n    onClose,\n    toEditTitle,\n    toEditDescription,\n    id\n  } = _ref;\n  const [title, setTitle] = useState(toEditTitle);\n  const [description, setDescription] = useState(toEditDescription); // function to update firestore \n\n  const handleUpdate = async e => {\n    e.preventDefault();\n    const taskDocRef = doc(db, 'notas', id);\n\n    try {\n      await updateDoc(taskDocRef, {\n        title: title,\n        description: description\n      });\n      onClose();\n    } catch (err) {\n      alert(err);\n    }\n  }; /////////////\n  /////\n\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleUpdate,\n    className: \"editTask\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"title\",\n      onChange: e => setTitle(e.target.value.toUpperCase()),\n      value: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      onChange: e => setDescription(e.target.value),\n      value: description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Editar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 7\n  }, this);\n}\n\n_s(EditTask, \"TchmB0De3CMtZxroHivBEqMixPE=\");\n\n_c = EditTask;\nexport default EditTask;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditTask\");","map":{"version":3,"names":["useState","doc","updateDoc","db","Swal","formValues","title","html","focusConfirm","preConfirm","document","getElementById","value","description","EditTask","open","onClose","toEditTitle","toEditDescription","id","setTitle","setDescription","handleUpdate","e","preventDefault","taskDocRef","err","alert","target","toUpperCase"],"sources":["/Users/mac/Documents/Lim17-lab-note/src/components/EnterApp/Home/Crud/Edit.js"],"sourcesContent":["\n\n//import Modal from \"./Modal\"\nimport {useState} from 'react'\nimport { doc, updateDoc } from \"firebase/firestore\";\nimport {db} from '../../../../firebase/connection.js'\nimport Swal from 'sweetalert2'\n\nconst formValues = {\n  title: 'Multiple inputs',\n  html:\n    '<input id=\"title\" class=\"swal2-input\">' +\n    '<input id=\"description\" class=\"swal2-input\">',\n  focusConfirm: false,\n  preConfirm: () => ({\n   \n     title: document.getElementById('title').value,\n     description: document.getElementById('description').value,\n  })\n}\n///////////////\nfunction EditTask({open, onClose, toEditTitle, toEditDescription, id}) {\n\n  const [title, setTitle] = useState(toEditTitle)\n  const [description, setDescription] = useState(toEditDescription)\n\n  // function to update firestore \n  const handleUpdate = async (e) => {\n    e.preventDefault()\n    const taskDocRef = doc(db, 'notas', id)\n    try{\n      await updateDoc(taskDocRef, {\n        title: title,\n        description: description\n      })\n      onClose()\n    } catch (err) {\n      alert(err)\n    }\n    \n  }\n  /////////////\n\n  /////\n  \n  return (\n      <form onSubmit={handleUpdate} className='editTask'>\n        <input type='text' name='title' onChange={(e) => setTitle(e.target.value.toUpperCase())} value={title}/>\n        <textarea onChange={(e) => setDescription(e.target.value)} value={description}></textarea>\n        <button type='submit'>Editar</button>\n      </form> \n  )\n\n}\n\nexport default EditTask\n\n"],"mappings":";;;AAEA;AACA,SAAQA,QAAR,QAAuB,OAAvB;AACA,SAASC,GAAT,EAAcC,SAAd,QAA+B,oBAA/B;AACA,SAAQC,EAAR,QAAiB,oCAAjB;AACA,OAAOC,IAAP,MAAiB,aAAjB;;AAEA,MAAMC,UAAU,GAAG;EACjBC,KAAK,EAAE,iBADU;EAEjBC,IAAI,EACF,2CACA,8CAJe;EAKjBC,YAAY,EAAE,KALG;EAMjBC,UAAU,EAAE,OAAO;IAEhBH,KAAK,EAAEI,QAAQ,CAACC,cAAT,CAAwB,OAAxB,EAAiCC,KAFxB;IAGhBC,WAAW,EAAEH,QAAQ,CAACC,cAAT,CAAwB,aAAxB,EAAuCC;EAHpC,CAAP;AANK,CAAnB,C,CAYA;;AACA,SAASE,QAAT,OAAuE;EAAA;;EAAA,IAArD;IAACC,IAAD;IAAOC,OAAP;IAAgBC,WAAhB;IAA6BC,iBAA7B;IAAgDC;EAAhD,CAAqD;EAErE,MAAM,CAACb,KAAD,EAAQc,QAAR,IAAoBpB,QAAQ,CAACiB,WAAD,CAAlC;EACA,MAAM,CAACJ,WAAD,EAAcQ,cAAd,IAAgCrB,QAAQ,CAACkB,iBAAD,CAA9C,CAHqE,CAKrE;;EACA,MAAMI,YAAY,GAAG,MAAOC,CAAP,IAAa;IAChCA,CAAC,CAACC,cAAF;IACA,MAAMC,UAAU,GAAGxB,GAAG,CAACE,EAAD,EAAK,OAAL,EAAcgB,EAAd,CAAtB;;IACA,IAAG;MACD,MAAMjB,SAAS,CAACuB,UAAD,EAAa;QAC1BnB,KAAK,EAAEA,KADmB;QAE1BO,WAAW,EAAEA;MAFa,CAAb,CAAf;MAIAG,OAAO;IACR,CAND,CAME,OAAOU,GAAP,EAAY;MACZC,KAAK,CAACD,GAAD,CAAL;IACD;EAEF,CAbD,CANqE,CAoBrE;EAEA;;;EAEA,oBACI;IAAM,QAAQ,EAAEJ,YAAhB;IAA8B,SAAS,EAAC,UAAxC;IAAA,wBACE;MAAO,IAAI,EAAC,MAAZ;MAAmB,IAAI,EAAC,OAAxB;MAAgC,QAAQ,EAAGC,CAAD,IAAOH,QAAQ,CAACG,CAAC,CAACK,MAAF,CAAShB,KAAT,CAAeiB,WAAf,EAAD,CAAzD;MAAyF,KAAK,EAAEvB;IAAhG;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAU,QAAQ,EAAGiB,CAAD,IAAOF,cAAc,CAACE,CAAC,CAACK,MAAF,CAAShB,KAAV,CAAzC;MAA2D,KAAK,EAAEC;IAAlE;MAAA;MAAA;MAAA;IAAA,QAFF,eAGE;MAAQ,IAAI,EAAC,QAAb;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAHF;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAQD;;GAhCQC,Q;;KAAAA,Q;AAkCT,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}