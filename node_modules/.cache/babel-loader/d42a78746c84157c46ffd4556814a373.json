{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/Lim17-lab-note/src/components/EnterApp/Home/Crud/Create.js\",\n    _s = $RefreshSig$();\n\nimport { db } from \"../../../../firebase/connection.js\";\nimport { collection, addDoc, Timestamp } from 'firebase/firestore';\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Create = () => {\n  _s();\n\n  const usersCollectionRef = collection(db, \"notas\");\n  const [title, setTitle] = useState([\"\"]);\n  const [description, setDescription] = useState([\"\"]); //guardar nota\n\n  const saveNote = () => {\n    addDoc(usersCollectionRef, {\n      title: title,\n      description: description,\n      created: Timestamp.now()\n    });\n    setTitle(\"\");\n    setDescription(\"\");\n  };\n  /*const saveNote2 = async (e) => {\n    e.preventDefault()\n    try {\n      await addDoc(collection(db, 'newNote'), {\n        title: title,\n        description: description,\n        created: Timestamp.now()\n      })\n     } catch (err) {\n      alert(err)\n    }\n  }*/\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: saveNote,\n      className: \"addTask\",\n      name: \"addTask\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"title\",\n        onChange: e => setTitle(e.target.value.toUpperCase()),\n        value: title,\n        placeholder: \"Enter title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        onChange: e => setDescription(e.target.value),\n        placeholder: \"Enter task decription\",\n        value: description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Done\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Create, \"POLFBiE9zJl0bcaFCSk66U3i2qM=\");\n\n_c = Create;\nexport default Create;\n/*\nimport { db } from \"../../../../firebase/connection.js\";\nimport {collection, addDoc, Timestamp,query, orderBy, onSnapshot} from 'firebase/firestore'\nimport { useState, useEffect } from \"react\";\n\nimport { doc, updateDoc } from \"firebase/firestore\";\n\nimport Task from '../Task.js'\n\n ////////mostrar en pantalla ///////\n  const [openAddModal, setOpenAddModal] = useState(false)\n  const [tasks, setTasks] = useState([])\n\n  useEffect(() => {\n    const taskColRef = query(collection(db, 'tasks'), orderBy('created', 'desc'))\n    onSnapshot(taskColRef, (snapshot) => {\n      setTasks(snapshot.docs.map(doc => ({\n        id: doc.id,\n        data: doc.data()\n      })))\n    })\n  },[])\n\n\n     <div className='taskManager__tasks'>\n\n{tasks.map((task) => (\n  <Task\n    id={task.id}\n    key={task.id}\n    completed={task.data.completed}\n    title={task.data.title} \n    description={task.data.description}\n  />\n))}\n\n</div>\n*/\n\nvar _c;\n\n$RefreshReg$(_c, \"Create\");","map":{"version":3,"names":["db","collection","addDoc","Timestamp","useState","Create","usersCollectionRef","title","setTitle","description","setDescription","saveNote","created","now","e","target","value","toUpperCase"],"sources":["/Users/mac/Documents/Lim17-lab-note/src/components/EnterApp/Home/Crud/Create.js"],"sourcesContent":["import { db } from \"../../../../firebase/connection.js\";\nimport { collection, addDoc, Timestamp } from 'firebase/firestore'\nimport { useState } from \"react\";\n\nconst Create =() => {\n\n  const usersCollectionRef = collection(db, \"notas\");\n  const [title, setTitle] = useState([\"\"])\n  const [description, setDescription] = useState([\"\"])\n\n  //guardar nota\n  const saveNote = () =>{\n    addDoc(usersCollectionRef,{\n      title:title, description:description, created:Timestamp.now()\n    })\n    setTitle(\"\");\n    setDescription(\"\");\n  }\n\n  /*const saveNote2 = async (e) => {\n    e.preventDefault()\n    try {\n      await addDoc(collection(db, 'newNote'), {\n        title: title,\n        description: description,\n        created: Timestamp.now()\n      })\n\n    } catch (err) {\n      alert(err)\n    }\n  }*/\n \n  return (\n    <div>\n\n      <form onSubmit={saveNote} className='addTask' name='addTask'>\n        <input \n          type='text' \n          name='title' \n          onChange={(e) => setTitle(e.target.value.toUpperCase())} \n          value={title}\n          placeholder='Enter title'/>\n        <textarea \n          onChange={(e) => setDescription(e.target.value)}\n          placeholder='Enter task decription'\n          value={description}></textarea>\n        <button type='submit'>Done</button>\n      </form> \n\n      </div>\n     \n  )\n\n\n}\n\nexport default Create;\n\n\n/*\nimport { db } from \"../../../../firebase/connection.js\";\nimport {collection, addDoc, Timestamp,query, orderBy, onSnapshot} from 'firebase/firestore'\nimport { useState, useEffect } from \"react\";\n\nimport { doc, updateDoc } from \"firebase/firestore\";\n\nimport Task from '../Task.js'\n\n ////////mostrar en pantalla ///////\n  const [openAddModal, setOpenAddModal] = useState(false)\n  const [tasks, setTasks] = useState([])\n\n  useEffect(() => {\n    const taskColRef = query(collection(db, 'tasks'), orderBy('created', 'desc'))\n    onSnapshot(taskColRef, (snapshot) => {\n      setTasks(snapshot.docs.map(doc => ({\n        id: doc.id,\n        data: doc.data()\n      })))\n    })\n  },[])\n\n\n     <div className='taskManager__tasks'>\n\n{tasks.map((task) => (\n  <Task\n    id={task.id}\n    key={task.id}\n    completed={task.data.completed}\n    title={task.data.title} \n    description={task.data.description}\n  />\n))}\n\n</div>\n*/"],"mappings":";;;AAAA,SAASA,EAAT,QAAmB,oCAAnB;AACA,SAASC,UAAT,EAAqBC,MAArB,EAA6BC,SAA7B,QAA8C,oBAA9C;AACA,SAASC,QAAT,QAAyB,OAAzB;;;AAEA,MAAMC,MAAM,GAAE,MAAM;EAAA;;EAElB,MAAMC,kBAAkB,GAAGL,UAAU,CAACD,EAAD,EAAK,OAAL,CAArC;EACA,MAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,CAAC,EAAD,CAAD,CAAlC;EACA,MAAM,CAACK,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,CAAC,CAAC,EAAD,CAAD,CAA9C,CAJkB,CAMlB;;EACA,MAAMO,QAAQ,GAAG,MAAK;IACpBT,MAAM,CAACI,kBAAD,EAAoB;MACxBC,KAAK,EAACA,KADkB;MACXE,WAAW,EAACA,WADD;MACcG,OAAO,EAACT,SAAS,CAACU,GAAV;IADtB,CAApB,CAAN;IAGAL,QAAQ,CAAC,EAAD,CAAR;IACAE,cAAc,CAAC,EAAD,CAAd;EACD,CAND;EAQA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;EAGE,oBACE;IAAA,uBAEE;MAAM,QAAQ,EAAEC,QAAhB;MAA0B,SAAS,EAAC,SAApC;MAA8C,IAAI,EAAC,SAAnD;MAAA,wBACE;QACE,IAAI,EAAC,MADP;QAEE,IAAI,EAAC,OAFP;QAGE,QAAQ,EAAGG,CAAD,IAAON,QAAQ,CAACM,CAAC,CAACC,MAAF,CAASC,KAAT,CAAeC,WAAf,EAAD,CAH3B;QAIE,KAAK,EAAEV,KAJT;QAKE,WAAW,EAAC;MALd;QAAA;QAAA;QAAA;MAAA,QADF,eAOE;QACE,QAAQ,EAAGO,CAAD,IAAOJ,cAAc,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CADjC;QAEE,WAAW,EAAC,uBAFd;QAGE,KAAK,EAAEP;MAHT;QAAA;QAAA;QAAA;MAAA,QAPF,eAWE;QAAQ,IAAI,EAAC,QAAb;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAXF;IAAA;MAAA;MAAA;MAAA;IAAA;EAFF;IAAA;IAAA;IAAA;EAAA,QADF;AAsBD,CAnDD;;GAAMJ,M;;KAAAA,M;AAqDN,eAAeA,MAAf;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}