{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/Lim17-lab-note/src/components/EnterApp/Home/Crud/Edit.js\";\n//import Modal from \"./Modal\"\nimport { useState } from 'react';\nimport { doc, updateDoc } from \"firebase/firestore\";\nimport { db } from '../../../../firebase/connection.js'; //import Swal from 'sweetalert2'\n\nimport swal from 'sweetalert';\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EditTask(_ref) {\n  let {\n    open,\n    onClose,\n    toEditTitle,\n    toEditDescription,\n    id\n  } = _ref;\n\n  /*const [title, setTitle] = useState(toEditTitle)\n  const [description, setDescription] = useState(toEditDescription)\n   // function to update firestore \n  const handleUpdate = async (e) => {\n    e.preventDefault()\n    const taskDocRef = doc(db, 'notas', id)\n    try{\n      await updateDoc(taskDocRef, {\n        title: title,\n        description: description\n      })\n      onClose()\n    } catch (err) {\n      alert(err)\n    }\n    \n  }*/\n  /////////////\n  const DEFAULT_INPUT_TEXT = \"\";\n\n  class MyInput extends Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        text: DEFAULT_INPUT_TEXT\n      };\n    }\n\n    changeText(e) {\n      let text = e.target.value;\n      this.setState({\n        text\n      });\n      swal.setActionValue(text);\n    }\n\n  }\n\n  let wrapper = document.createElement('div');\n  ReactDOM.render( /*#__PURE__*/_jsxDEV(MyInput, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 19\n  }, this), wrapper);\n  let el = wrapper.firstChild;\n  swal({\n    text: \"Write something here:\",\n    content: el,\n    buttons: {\n      confirm: {\n        value: DEFAULT_INPUT_TEXT\n      }\n    }\n  }).then(value => {\n    swal(`You typed: ${value}`);\n  }); /////\n\n  return /*#__PURE__*/_jsxDEV(\"input\", {\n    value: this.state.text,\n    onChange: this.changeText.bind(this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n}\n\n_c = EditTask;\nexport default EditTask;\n/*\n\n\n//import Modal from \"./Modal\"\nimport {useState} from 'react'\nimport { doc, updateDoc } from \"firebase/firestore\";\nimport {db} from '../../../../firebase/connection.js'\nimport Swal from 'sweetalert2'\n\n\nfunction EditTask({open, onClose, toEditTitle, toEditDescription, id}) {\n\n  const [title, setTitle] = useState(toEditTitle)\n  const [description, setDescription] = useState(toEditDescription)\n\n  // function to update firestore \n  const handleUpdate = async (e) => {\n    e.preventDefault()\n    const taskDocRef = doc(db, 'notas', id)\n    try{\n      await updateDoc(taskDocRef, {\n        title: title,\n        description: description\n      })\n      onClose()\n    } catch (err) {\n      alert(err)\n    }\n    \n  }\n  /////////////\n\n  /////\n  \n  return (\n      <form onSubmit={handleUpdate} className='editTask'>\n        <input type='text' name='title' onChange={(e) => setTitle(e.target.value.toUpperCase())} value={title}/>\n        <textarea onChange={(e) => setDescription(e.target.value)} value={description}></textarea>\n        <button type='submit'>Editar</button>\n      </form> \n  )\n\n}\n\nexport default EditTask\n*/\n\nvar _c;\n\n$RefreshReg$(_c, \"EditTask\");","map":{"version":3,"names":["useState","doc","updateDoc","db","swal","React","Component","ReactDOM","EditTask","open","onClose","toEditTitle","toEditDescription","id","DEFAULT_INPUT_TEXT","MyInput","constructor","props","state","text","changeText","e","target","value","setState","setActionValue","wrapper","document","createElement","render","el","firstChild","content","buttons","confirm","then","bind"],"sources":["/Users/mac/Documents/Lim17-lab-note/src/components/EnterApp/Home/Crud/Edit.js"],"sourcesContent":["//import Modal from \"./Modal\"\nimport {useState} from 'react'\nimport { doc, updateDoc } from \"firebase/firestore\";\nimport {db} from '../../../../firebase/connection.js'\n//import Swal from 'sweetalert2'\nimport swal from 'sweetalert';\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\n\nfunction EditTask({open, onClose, toEditTitle, toEditDescription, id}) {\n\n  /*const [title, setTitle] = useState(toEditTitle)\n  const [description, setDescription] = useState(toEditDescription)\n\n  // function to update firestore \n  const handleUpdate = async (e) => {\n    e.preventDefault()\n    const taskDocRef = doc(db, 'notas', id)\n    try{\n      await updateDoc(taskDocRef, {\n        title: title,\n        description: description\n      })\n      onClose()\n    } catch (err) {\n      alert(err)\n    }\n    \n  }*/\n  /////////////\n\n   \n  const DEFAULT_INPUT_TEXT = \"\";\n   \n  class MyInput extends Component {\n    constructor(props) {\n      super(props);\n   \n      this.state = {\n        text: DEFAULT_INPUT_TEXT,\n      };\n    }\n   \n    changeText(e) {\n      let text = e.target.value;\n   \n      this.setState({\n        text,\n      });\n      swal.setActionValue(text);\n    }\n   \n\n  }\n   \n  let wrapper = document.createElement('div');\n  ReactDOM.render(<MyInput />, wrapper);\n  let el = wrapper.firstChild;\n   \n  swal({\n    text: \"Write something here:\",\n    content: el,\n    buttons: {\n      confirm: {\n        value: DEFAULT_INPUT_TEXT,\n      },\n    },\n  })\n  .then((value) => {\n    swal(`You typed: ${value}`);\n  });\n  /////\n  \n  return (\n    <input\n      value={this.state.text}\n      onChange={this.changeText.bind(this)}\n    />\n  )\n}\n\nexport default EditTask\n\n\n\n\n/*\n\n\n//import Modal from \"./Modal\"\nimport {useState} from 'react'\nimport { doc, updateDoc } from \"firebase/firestore\";\nimport {db} from '../../../../firebase/connection.js'\nimport Swal from 'sweetalert2'\n\n\nfunction EditTask({open, onClose, toEditTitle, toEditDescription, id}) {\n\n  const [title, setTitle] = useState(toEditTitle)\n  const [description, setDescription] = useState(toEditDescription)\n\n  // function to update firestore \n  const handleUpdate = async (e) => {\n    e.preventDefault()\n    const taskDocRef = doc(db, 'notas', id)\n    try{\n      await updateDoc(taskDocRef, {\n        title: title,\n        description: description\n      })\n      onClose()\n    } catch (err) {\n      alert(err)\n    }\n    \n  }\n  /////////////\n\n  /////\n  \n  return (\n      <form onSubmit={handleUpdate} className='editTask'>\n        <input type='text' name='title' onChange={(e) => setTitle(e.target.value.toUpperCase())} value={title}/>\n        <textarea onChange={(e) => setDescription(e.target.value)} value={description}></textarea>\n        <button type='submit'>Editar</button>\n      </form> \n  )\n\n}\n\nexport default EditTask\n*/"],"mappings":";AAAA;AACA,SAAQA,QAAR,QAAuB,OAAvB;AACA,SAASC,GAAT,EAAcC,SAAd,QAA+B,oBAA/B;AACA,SAAQC,EAAR,QAAiB,oCAAjB,C,CACA;;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,WAArB;;;AAEA,SAASC,QAAT,OAAuE;EAAA,IAArD;IAACC,IAAD;IAAOC,OAAP;IAAgBC,WAAhB;IAA6BC,iBAA7B;IAAgDC;EAAhD,CAAqD;;EAErE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAEE;EAGA,MAAMC,kBAAkB,GAAG,EAA3B;;EAEA,MAAMC,OAAN,SAAsBT,SAAtB,CAAgC;IAC9BU,WAAW,CAACC,KAAD,EAAQ;MACjB,MAAMA,KAAN;MAEA,KAAKC,KAAL,GAAa;QACXC,IAAI,EAAEL;MADK,CAAb;IAGD;;IAEDM,UAAU,CAACC,CAAD,EAAI;MACZ,IAAIF,IAAI,GAAGE,CAAC,CAACC,MAAF,CAASC,KAApB;MAEA,KAAKC,QAAL,CAAc;QACZL;MADY,CAAd;MAGAf,IAAI,CAACqB,cAAL,CAAoBN,IAApB;IACD;;EAhB6B;;EAqBhC,IAAIO,OAAO,GAAGC,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAd;EACArB,QAAQ,CAACsB,MAAT,eAAgB,QAAC,OAAD;IAAA;IAAA;IAAA;EAAA,QAAhB,EAA6BH,OAA7B;EACA,IAAII,EAAE,GAAGJ,OAAO,CAACK,UAAjB;EAEA3B,IAAI,CAAC;IACHe,IAAI,EAAE,uBADH;IAEHa,OAAO,EAAEF,EAFN;IAGHG,OAAO,EAAE;MACPC,OAAO,EAAE;QACPX,KAAK,EAAET;MADA;IADF;EAHN,CAAD,CAAJ,CASCqB,IATD,CASOZ,KAAD,IAAW;IACfnB,IAAI,CAAE,cAAamB,KAAM,EAArB,CAAJ;EACD,CAXD,EAlDqE,CA8DrE;;EAEA,oBACE;IACE,KAAK,EAAE,KAAKL,KAAL,CAAWC,IADpB;IAEE,QAAQ,EAAE,KAAKC,UAAL,CAAgBgB,IAAhB,CAAqB,IAArB;EAFZ;IAAA;IAAA;IAAA;EAAA,QADF;AAMD;;KAtEQ5B,Q;AAwET,eAAeA,QAAf;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}