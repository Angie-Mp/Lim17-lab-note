{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/Lim17-lab-note/src/components/EnterApp/Home/Task.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react'; //import TaskItem from './TaskItem'\n\nimport EditTask from './Crud/Edit.js';\nimport { doc, updateDoc, deleteDoc } from \"firebase/firestore\";\nimport { db } from '../../../firebase/connection.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Task(_ref) {\n  _s();\n\n  let {\n    id\n  } = _ref;\n  ///////\n  const [title, setTitle] = useState(toEditTitle);\n  const [description, setDescription] = useState(toEditDescription); // function to update firestore \n\n  const handleUpdate = async e => {\n    e.preventDefault();\n    const taskDocRef = doc(db, 'notas', id);\n\n    try {\n      await updateDoc(taskDocRef, {\n        title: title,\n        description: description\n      });\n      onClose();\n    } catch (err) {\n      alert(err);\n    }\n  }; //////////\n\n\n  const [checked, setChecked] = useState(completed);\n  const [open, setOpen] = useState({\n    edit: false,\n    view: false\n  });\n\n  const handleClose = () => {\n    setOpen({\n      edit: false,\n      view: false\n    });\n  };\n  /* function to update firestore */\n\n\n  const handleChange = async () => {\n    const taskDocRef = doc(db, 'notas', id);\n\n    try {\n      await updateDoc(taskDocRef, {\n        completed: checked\n      });\n    } catch (err) {\n      alert(err);\n    }\n  };\n  /* function to delete a document from firstore */\n\n\n  const handleDelete = async () => {\n    const taskDocRef = doc(db, 'notas', id);\n\n    try {\n      await deleteDoc(taskDocRef);\n    } catch (err) {\n      alert(err);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `task ${checked && 'task--borderColor'}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task__body\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task__buttons\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"task__deleteNedit\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"task__editButton\",\n            onClick: () => setOpen({ ...open,\n              edit: true\n            }),\n            children: \"Editar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"task__deleteButton\",\n            onClick: handleDelete,\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), open.edit && /*#__PURE__*/_jsxDEV(Edit, {\n      onClose: handleClose,\n      toEditTitle: title,\n      toEditDescription: description,\n      open: open.edit,\n      id: id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Task, \"t+3R63DiwLoreQ9G9ViZOh5AGPI=\");\n\n_c = Task;\nexport default Task;\n/*\nimport {useState} from 'react'\n//import TaskItem from './TaskItem'\nimport EditTask from './Crud/Edit.js'\nimport { doc, updateDoc, deleteDoc} from \"firebase/firestore\";\nimport {db} from '../../../firebase/connection.js'\n\nfunction Task({id, title, description, completed, toEditTitle,toEditDescription}) {\n\n  const [checked, setChecked] = useState(completed)\n  const [open, setOpen] = useState({edit:false, view:false})\n\n  const handleClose = () => {\n    setOpen({edit:false, view:false})\n  }\n\n  // function to update firestore /\n  const handleChange = async () => {\n    const taskDocRef = doc(db, 'notas', id)\n    try{\n      await updateDoc(taskDocRef, {\n        completed: checked\n      })\n    } catch (err) {\n      alert(err)\n    }\n  }\n\n  // function to delete a document from firstore //\n  const handleDelete = async () => {\n    const taskDocRef = doc(db, 'notas', id)\n    try{\n      await deleteDoc(taskDocRef)\n    } catch (err) {\n      alert(err)\n    }\n  }\n\n\n  return (\n    <div className={`task ${checked && 'task--borderColor'}`}>\n      <div className='task__body'>\n        <input value={title}/>\n        <p>{description}</p>\n        <div className='task__buttons'>\n          <div className='task__deleteNedit'>\n            <button \n              className='task__editButton' \n              onClick={() => setOpen({...open, edit : true})}>\n              Editar\n            </button>\n            <button className='task__deleteButton' onClick={handleDelete}>Delete</button>\n          </div>\n        </div>\n      </div>\n\n{open.edit &&\n        <EditTask \n          onClose={handleClose} \n          toEditTitle={title} \n          toEditDescription={description} \n          open={open.edit}\n          id={id} />\n      }\n    </div>\n  )\n}\n\nexport default Task\n*/\n\nvar _c;\n\n$RefreshReg$(_c, \"Task\");","map":{"version":3,"names":["useState","EditTask","doc","updateDoc","deleteDoc","db","Task","id","title","setTitle","toEditTitle","description","setDescription","toEditDescription","handleUpdate","e","preventDefault","taskDocRef","onClose","err","alert","checked","setChecked","completed","open","setOpen","edit","view","handleClose","handleChange","handleDelete"],"sources":["/Users/mac/Documents/Lim17-lab-note/src/components/EnterApp/Home/Task.js"],"sourcesContent":["import {useState} from 'react'\n//import TaskItem from './TaskItem'\nimport EditTask from './Crud/Edit.js'\nimport { doc, updateDoc, deleteDoc} from \"firebase/firestore\";\nimport {db} from '../../../firebase/connection.js'\n\nfunction Task({id, }) {\n///////\nconst [title, setTitle] = useState(toEditTitle)\n  const [description, setDescription] = useState(toEditDescription)\n\n  // function to update firestore \n  const handleUpdate = async (e) => {\n    e.preventDefault()\n    const taskDocRef = doc(db, 'notas', id)\n    try{\n      await updateDoc(taskDocRef, {\n        title: title,\n        description: description\n      })\n      onClose()\n    } catch (err) {\n      alert(err)\n    }\n    \n  }\n\n//////////\n  const [checked, setChecked] = useState(completed)\n  const [open, setOpen] = useState({edit:false, view:false})\n\n  const handleClose = () => {\n    setOpen({edit:false, view:false})\n  }\n\n  /* function to update firestore */\n  const handleChange = async () => {\n    const taskDocRef = doc(db, 'notas', id)\n    try{\n      await updateDoc(taskDocRef, {\n        completed: checked\n      })\n    } catch (err) {\n      alert(err)\n    }\n  }\n\n  /* function to delete a document from firstore */ \n  const handleDelete = async () => {\n    const taskDocRef = doc(db, 'notas', id)\n    try{\n      await deleteDoc(taskDocRef)\n    } catch (err) {\n      alert(err)\n    }\n  }\n\n\n  return (\n    <div className={`task ${checked && 'task--borderColor'}`}>\n      <div className='task__body'>\n        <input value={title}/>\n        <br/>\n        <input value={description}/>\n        \n        <div className='task__buttons'>\n          <div className='task__deleteNedit'>\n            <button \n              className='task__editButton' \n              onClick={() => setOpen({...open, edit : true})}>\n              Editar\n            </button>\n            <button className='task__deleteButton' onClick={handleDelete}>Delete</button>\n            \n          </div>\n        </div>\n        <br/>\n      </div>\n\n{open.edit &&\n        <Edit\n          onClose={handleClose} \n          toEditTitle={title} \n          toEditDescription={description} \n          open={open.edit}\n          id={id} />\n      }\n    </div>\n  )\n}\n\nexport default Task\n\n\n/*\nimport {useState} from 'react'\n//import TaskItem from './TaskItem'\nimport EditTask from './Crud/Edit.js'\nimport { doc, updateDoc, deleteDoc} from \"firebase/firestore\";\nimport {db} from '../../../firebase/connection.js'\n\nfunction Task({id, title, description, completed, toEditTitle,toEditDescription}) {\n\n  const [checked, setChecked] = useState(completed)\n  const [open, setOpen] = useState({edit:false, view:false})\n\n  const handleClose = () => {\n    setOpen({edit:false, view:false})\n  }\n\n  // function to update firestore /\n  const handleChange = async () => {\n    const taskDocRef = doc(db, 'notas', id)\n    try{\n      await updateDoc(taskDocRef, {\n        completed: checked\n      })\n    } catch (err) {\n      alert(err)\n    }\n  }\n\n  // function to delete a document from firstore //\n  const handleDelete = async () => {\n    const taskDocRef = doc(db, 'notas', id)\n    try{\n      await deleteDoc(taskDocRef)\n    } catch (err) {\n      alert(err)\n    }\n  }\n\n\n  return (\n    <div className={`task ${checked && 'task--borderColor'}`}>\n      <div className='task__body'>\n        <input value={title}/>\n        <p>{description}</p>\n        <div className='task__buttons'>\n          <div className='task__deleteNedit'>\n            <button \n              className='task__editButton' \n              onClick={() => setOpen({...open, edit : true})}>\n              Editar\n            </button>\n            <button className='task__deleteButton' onClick={handleDelete}>Delete</button>\n          </div>\n        </div>\n      </div>\n\n{open.edit &&\n        <EditTask \n          onClose={handleClose} \n          toEditTitle={title} \n          toEditDescription={description} \n          open={open.edit}\n          id={id} />\n      }\n    </div>\n  )\n}\n\nexport default Task\n*/"],"mappings":"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"},"metadata":{},"sourceType":"module"}