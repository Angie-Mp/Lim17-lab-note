{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/Lim17-lab-note/src/components/EnterApp/Home/Task.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react'; //import TaskItem from './TaskItem'\n//import EditTask from './EditTask'\n\nimport { doc, updateDoc, deleteDoc } from \"firebase/firestore\";\nimport { db } from '../../../firebase/connection.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Task(_ref) {\n  _s();\n\n  let {\n    id\n  } = _ref;\n  const [checked, setChecked] = useState(completed);\n  const [open, setOpen] = useState({\n    edit: false,\n    view: false\n  });\n\n  const handleClose = () => {\n    setOpen({\n      edit: false,\n      view: false\n    });\n  };\n  /* function to update firestore */\n\n\n  const handleChange = async () => {\n    const taskDocRef = doc(db, 'tasks', id);\n\n    try {\n      await updateDoc(taskDocRef, {\n        completed: checked\n      });\n    } catch (err) {\n      alert(err);\n    }\n  };\n  /* function to delete a document from firstore */\n\n\n  const handleDelete = async () => {\n    const taskDocRef = doc(db, 'tasks', id);\n\n    try {\n      await deleteDoc(taskDocRef);\n    } catch (err) {\n      alert(err);\n    }\n  }; //////// editar ///////\n\n\n  const [title, setTitle] = useState(toEditTitle);\n  const [description, setDescription] = useState(toEditDescription);\n  /* function to update firestore */\n\n  const handleUpdate = async e => {\n    e.preventDefault();\n    const taskDocRef = doc(db, 'tasks');\n\n    try {\n      await updateDoc(taskDocRef, {\n        title: title,\n        description: description\n      }); // onClose()\n    } catch (err) {\n      alert(err);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `task ${checked && 'task--borderColor'}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        id: `checkbox-${id}`,\n        className: \"checkbox-custom\",\n        name: \"checkbox\",\n        checked: checked,\n        onChange: handleChange,\n        type: \"checkbox\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: `checkbox-${id}`,\n        className: \"checkbox-custom-label\",\n        onClick: () => setChecked(!checked)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task__body\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task__buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"task__deleteNedit\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"task__editButton\",\n            onClick: () => setOpen({ ...open,\n              edit: true\n            }),\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"task__deleteButton\",\n            onClick: handleDelete,\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setOpen({ ...open,\n            view: true\n          }),\n          children: \"View\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleUpdate,\n      className: \"editTask\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"title\",\n        onChange: e => setTitle(e.target.value.toUpperCase()),\n        value: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        onChange: e => setDescription(e.target.value),\n        value: description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Task, \"tJRBLDhW8BMKl/WKEmGToMdS2j0=\");\n\n_c = Task;\nexport default Task;\n\nvar _c;\n\n$RefreshReg$(_c, \"Task\");","map":{"version":3,"names":["useState","doc","updateDoc","deleteDoc","db","Task","id","checked","setChecked","completed","open","setOpen","edit","view","handleClose","handleChange","taskDocRef","err","alert","handleDelete","title","setTitle","toEditTitle","description","setDescription","toEditDescription","handleUpdate","e","preventDefault","target","value","toUpperCase"],"sources":["/Users/mac/Documents/Lim17-lab-note/src/components/EnterApp/Home/Task.js"],"sourcesContent":["import {useState} from 'react'\n//import TaskItem from './TaskItem'\n//import EditTask from './EditTask'\nimport { doc, updateDoc, deleteDoc} from \"firebase/firestore\";\nimport {db} from '../../../firebase/connection.js'\n\nfunction Task({id,}) {\n\n  const [checked, setChecked] = useState(completed)\n  const [open, setOpen] = useState({edit:false, view:false})\n\n  const handleClose = () => {\n    setOpen({edit:false, view:false})\n  }\n\n  /* function to update firestore */\n  const handleChange = async () => {\n    const taskDocRef = doc(db, 'tasks', id)\n    try{\n      await updateDoc(taskDocRef, {\n        completed: checked\n      })\n    } catch (err) {\n      alert(err)\n    }\n  }\n\n  /* function to delete a document from firstore */ \n  const handleDelete = async () => {\n    const taskDocRef = doc(db, 'tasks', id)\n    try{\n      await deleteDoc(taskDocRef)\n    } catch (err) {\n      alert(err)\n    }\n  }\n\n\n   //////// editar ///////\n\n    const [title, setTitle] = useState(toEditTitle)\n  const [description, setDescription] = useState(toEditDescription)\n\n  /* function to update firestore */\n  const handleUpdate = async (e) => {\n    e.preventDefault()\n    const taskDocRef = doc(db, 'tasks')\n    try{\n      await updateDoc(taskDocRef, {\n        title: title,\n        description: description\n      })\n     // onClose()\n    } catch (err) {\n      alert(err)\n    }\n    \n  }\n\n\n  return (\n    <div className={`task ${checked && 'task--borderColor'}`}>\n      <div>\n        <input \n          id={`checkbox-${id}`} \n          className='checkbox-custom'\n          name=\"checkbox\" \n          checked={checked}\n          onChange={handleChange}\n          type=\"checkbox\" />\n        <label \n          htmlFor={`checkbox-${id}`} \n          className=\"checkbox-custom-label\" \n          onClick={() => setChecked(!checked)} ></label>\n      </div>\n      <div className='task__body'>\n        <h2>{title}</h2>\n        <p>{description}</p>\n        <div className='task__buttons'>\n          <div className='task__deleteNedit'>\n            <button \n              className='task__editButton' \n              onClick={() => setOpen({...open, edit : true})}>\n              Edit\n            </button>\n            <button className='task__deleteButton' onClick={handleDelete}>Delete</button>\n          </div>\n          <button \n            onClick={() => setOpen({...open, view: true})}>\n            View\n          </button>\n        </div>\n      </div>\n\n      <form onSubmit={handleUpdate} className='editTask'>\n        <input type='text' name='title' onChange={(e) => setTitle(e.target.value.toUpperCase())} value={title}/>\n        <textarea onChange={(e) => setDescription(e.target.value)} value={description}></textarea>\n        <button type='submit'>Edit</button>\n      </form> \n\n\n    </div>\n  )\n}\n\nexport default Task"],"mappings":"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"},"metadata":{},"sourceType":"module"}