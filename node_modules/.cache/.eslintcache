[{"/Users/mac/Documents/Lim17-lab-note/src/index.js":"1","/Users/mac/Documents/Lim17-lab-note/src/App.js":"2","/Users/mac/Documents/Lim17-lab-note/src/reportWebVitals.js":"3","/Users/mac/Documents/Lim17-lab-note/src/components/EnterApp/Login/Login.js":"4","/Users/mac/Documents/Lim17-lab-note/src/components/EnterApp/Home/Home.js":"5","/Users/mac/Documents/Lim17-lab-note/src/components/EnterApp/Register/Register.js":"6","/Users/mac/Documents/Lim17-lab-note/src/firebase/connection.js":"7","/Users/mac/Documents/Lim17-lab-note/src/components/EnterApp/Header/Header.js":"8","/Users/mac/Documents/Lim17-lab-note/src/components/EnterApp/Home/Crud/Create/Create.js":"9","/Users/mac/Documents/Lim17-lab-note/src/components/EnterApp/Home/Crud/Read/Read.js":"10","/Users/mac/Documents/Lim17-lab-note/src/components/EnterApp/Home/Crud/Edit/Edit.js":"11","/Users/mac/Documents/Lim17-lab-note/src/components/EnterApp/Home/Crud/Edit/ModalEdit.js":"12"},{"size":307,"mtime":1663785879140,"results":"13","hashOfConfig":"14"},{"size":1579,"mtime":1662759181527,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":1662050231833,"results":"16","hashOfConfig":"14"},{"size":2540,"mtime":1662759181539,"results":"17","hashOfConfig":"14"},{"size":201,"mtime":1664833157544,"results":"18","hashOfConfig":"14"},{"size":5627,"mtime":1662759181546,"results":"19","hashOfConfig":"14"},{"size":622,"mtime":1663609682596,"results":"20","hashOfConfig":"14"},{"size":434,"mtime":1662762511156,"results":"21","hashOfConfig":"14"},{"size":1628,"mtime":1664218625994,"results":"22","hashOfConfig":"14"},{"size":908,"mtime":1664832872782,"results":"23","hashOfConfig":"14"},{"size":1433,"mtime":1664832827899,"results":"24","hashOfConfig":"14"},{"size":1368,"mtime":1664832842752,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},"az4lfb",{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"29"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"29"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/mac/Documents/Lim17-lab-note/src/index.js",[],[],[],"/Users/mac/Documents/Lim17-lab-note/src/App.js",[],[],"/Users/mac/Documents/Lim17-lab-note/src/reportWebVitals.js",[],[],"/Users/mac/Documents/Lim17-lab-note/src/components/EnterApp/Login/Login.js",["67"],[],"import { React,useState } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { signInWithEmailAndPassword } from \"firebase/auth\";\nimport { auth } from \"../../../firebase/connection.js\";\nimport arcoIris from \"../../Assets/arcoIris.png\"\nimport \"./Style.css\"\n\n\nconst Login =() => {\n  const navigate = useNavigate();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errorMesage, setErrorMesage] = useState(\"\");\n  const [submitButtonDisabled, setSubmitButtonDisabled] = useState(false);\n\n  //mostrar y ocultar contrase単a\n  const [passwordShown, setPasswordShown] = useState(false);\n  //funcion del boton ocultar y mostrar\n  const hideShowPassword = () => {\n    setPasswordShown(!passwordShown);\n  };\n  //\n\n  const handleSubmission = () => {\n    if (!email || !password ) {\n      setErrorMesage(\"Campos vacios\");\n      return;\n    }\n    setErrorMesage(\"\");\n\n    setSubmitButtonDisabled(true);\n    signInWithEmailAndPassword(auth, email, password)\n      .then(async (res) => {\n        setSubmitButtonDisabled(false);\n        navigate(\"/home\");\n      })\n      .catch((err) => {\n        setSubmitButtonDisabled(false);\n        setErrorMesage(\"Ingrese datos correctos\");\n      });\n  };\n\n  return (\n    <div>\n      <div className=\"ContainerView\">\n        <img className=\"ContainerImage\" src={arcoIris} ></img>\n        <h1 className=\"StyleTitle\">Lab Notes</h1>\n\n        <div>\n        <h3 className=\"StyleText\">Correo</h3>\n        <input className=\"StyleInput\"\n          label=\"Email\"\n          onChange={(event) =>\n            setEmail(event.target.value)\n          }/>\n\n         <h3 className=\"StyleText\">Contrase単a</h3>\n        <input className=\"StyleInputPassword\"\n          type={passwordShown ? \"text\" : \"password\"}\n          label=\"Password\"\n          onChange={(event) =>\n            setPassword(event.target.value)\n          } />\n          <button className=\"StyleButtonPassword\" onClick={hideShowPassword}>\n            {passwordShown ? 'Ocultar':'Mostrar'} \n          </button>\n        </div>\n\n        <div>\n          <p className=\"StyleErrorMesage\">{errorMesage}</p>\n          <button className=\"StyleButton\" disabled={submitButtonDisabled} onClick={handleSubmission}>\n            Iniciar Secion\n          </button>\n          <br/>\n           <p className=\"StyleRegister\">\n            No tienes cuenta?  \n            <Link to=\"/register\" className=\"StyleRegister\">Registrarse</Link>\n           </p>\n        </div>\n      </div>\n    </div>\n  );\n}\nexport default Login;","/Users/mac/Documents/Lim17-lab-note/src/components/EnterApp/Home/Home.js",[],[],"/Users/mac/Documents/Lim17-lab-note/src/components/EnterApp/Register/Register.js",["68","69"],[],"import React, { useState } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { createUserWithEmailAndPassword, updateProfile } from \"firebase/auth\";\nimport { collection, addDoc } from \"firebase/firestore\";\nimport {db} from \"../../../firebase/connection.js\"\nimport { auth } from \"../../../firebase/connection.js\";\nimport arcoIris from \"../../Assets/arcoIris.png\"\n\nimport \"./Style.css\"\n\nconst Register = () => {\n\n  const navigate = useNavigate();\n  const usersCollectionRef = collection(db,\"usuarios\");\n  const [name, setName] = useState([\"\"]);\n  const [email, setEmail] = useState([\"\"]);\n  const [password, SetPassword] = useState([\"\"]);\n  const [errorMesage, setErrorMesage] = useState(\"\");\n  const [submitButtonDisabled, setSubmitButtonDisabled] = useState(false);\n\n  //mostrar y ocultar contrase単a\n  const [passwordShown, setPasswordShown] = useState(false);\n  //funcion del boton ocultar y mostrar\n  const hideShowPassword = () => {\n    setPasswordShown(!passwordShown);\n  };\n  //\n\n  const handleSubmission = () => {\n    if (!name || !email || !password) {\n      setErrorMesage(\"Ingrese datos \");\n      return;\n    }\n    setErrorMesage(\"\");\n  \n    setSubmitButtonDisabled(true);\n    createUserWithEmailAndPassword(auth, email, password)\n      .then(async (res) => {\n        ///////\n        try {\n          const register = addDoc(usersCollectionRef, {\n            name: name,\n            email: email,\n          });\n          console.log(register);\n          \n        } catch (e) {\n          console.error('Error, no se pudo registrar ', e);\n        }\n\n       setSubmitButtonDisabled(false);\n        navigate(\"/\");\n      })\n      .catch((err) => {\n        setSubmitButtonDisabled(false);\n        setErrorMesage(\"Ingrese datos validos\");\n      });\n  };\n\n  return (\n    <div>\n      <div className=\"ContainerRegisterView\">\n      <img className=\"ContainerRegisterImage\" src={arcoIris} ></img>\n      <h1 className=\"StyleRegisterTitle\">Registrarse</h1>\n\n      <div>\n        <h3 className=\"StyleRegisterText\">Ingresar Nombre</h3>\n        <input className=\"StyleRegisterInput\"\n          label=\"Name\"\n          onChange={(event) =>\n            setName(event.target.value)}\n        />\n\n        <h3 className=\"StyleRegisterText\">Ingresar Correo</h3>\n        <input className=\"StyleRegisterInput\"\n          label=\"Email\"\n          onChange={(event) =>\n            setEmail(event.target.value)}\n        />\n\n        <h3 className=\"StyleRegisterText\">Ingresar Contrase単a</h3>\n        <input className=\"StyleRegisterInputPassword\"\n          type={passwordShown ? \"text\" : \"password\"}\n          label=\"Password\"\n          onChange={(event) =>\n            SetPassword(event.target.value)}\n        />\n         <button className=\"StyleButtonPassword\" onClick={hideShowPassword}>\n            {passwordShown ? 'Ocultar':'Mostrar'} \n          </button>\n\n      </div>\n\n      <div>\n        <p className=\"StyleRegisterErrorMesage\">{errorMesage}</p>\n          <button className=\"StyleRegisterButton\" disabled={submitButtonDisabled} onClick={handleSubmission}>\n            Registrar\n          </button>\n          <br/>\n           <p className=\"StyleLogin\">\n            <Link to=\"/\" className=\"StyleLogin\">Iniciar Secion</Link>\n           </p>\n      </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Register;\n\n\n\n\n/*\nimport React, { useState } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { createUserWithEmailAndPassword, updateProfile } from \"firebase/auth\";\nimport { collection, addDoc } from \"firebase/firestore\";\n\n\n//import InputControl from \"../InputControl/InputControl\";\nimport { auth } from \"../../../firebase/connection.js\";\n\nconst Register = () => {\n  const navigate = useNavigate();\n  const [values, setValues] = useState({\n    name: \"\",\n    email: \"\",\n    pass: \"\",\n  });\n  const [errorMsg, setErrorMsg] = useState(\"\");\n  const [submitButtonDisabled, setSubmitButtonDisabled] = useState(false);\n\n  const handleSubmission = () => {\n    if (!values.name || !values.email || !values.pass) {\n      setErrorMsg(\"Fill all fields\");\n      return;\n    }\n    setErrorMsg(\"\");\n\n    setSubmitButtonDisabled(true);\n    createUserWithEmailAndPassword(auth, values.email, values.pass)\n      .then(async (res) => {\n        setSubmitButtonDisabled(false);\n        const user = res.user;\n        await updateProfile(user, {\n          displayName: values.name,\n        });\n        navigate(\"/\");\n      })\n      .catch((err) => {\n        setSubmitButtonDisabled(false);\n        setErrorMsg(err.message);\n      });\n  };\n\n  return (\n    <div >\n      <div >\n        <h1 >registrate</h1>\n\n        <input\n          label=\"Name\"\n          placeholder=\"Enter your name\"\n          onChange={(event) =>\n            setValues((prev) => ({ ...prev, name: event.target.value }))\n          }\n        />\n        <input\n          label=\"Email\"\n          placeholder=\"Enter email address\"\n          onChange={(event) =>\n            setValues((prev) => ({ ...prev, email: event.target.value }))\n          }\n        />\n        <input\n          label=\"Password\"\n          placeholder=\"Enter password\"\n          onChange={(event) =>\n            setValues((prev) => ({ ...prev, pass: event.target.value }))\n          }\n        />\n\n        <div >\n          <b>{errorMsg}</b>\n          <button onClick={handleSubmission} disabled={submitButtonDisabled}>\n            Signup\n          </button>\n          <p>\n            Already have an account?{\" \"}\n            <span>\n              <Link to=\"/home\">Login</Link>\n            </span>\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Register;\n*/","/Users/mac/Documents/Lim17-lab-note/src/firebase/connection.js",[],[],"/Users/mac/Documents/Lim17-lab-note/src/components/EnterApp/Header/Header.js",[],[],"/Users/mac/Documents/Lim17-lab-note/src/components/EnterApp/Home/Crud/Create/Create.js",["70"],[],"import { db } from \"../../../../../firebase/connection.js\";\nimport { collection, addDoc, Timestamp } from 'firebase/firestore'\nimport { useState } from \"react\";\nimport Read from \"../Read/Read.js\";\nimport createImg from \"../../../../Assets/createImg.png\"\nimport \"./Style.css\";\n\nconst Create =() => {\n  const usersCollectionRef = collection(db, \"notas\");\n  const [title, setTitle] = useState([\"\"])\n  const [description, setDescription] = useState([\"\"])\n\n  //guardar nota\n  const saveNote = (event) =>{\n    event.preventDefault()\n    addDoc(usersCollectionRef,{\n      title:title, description:description, created:Timestamp.now()\n    })\n    //que se limpien los campos al guardar nota\n    setTitle(\"\");\n    setDescription(\"\");\n  }\n  \n  return (\n    <div className='containerStyle'>\n      <form onSubmit={saveNote} className='containerFormStyle'>\n        <input\n          className=\"inputTitleStyle\"\n          type='text'\n          value={title}\n          placeholder=' Titulo'\n          onChange={(event) => setTitle(event.target.value.toUpperCase())}   \n        />\n        <br/>\n        <textarea \n          className=\"contentsStyle\"\n          value={description}\n          placeholder=' Descripcion de la Nota'\n          onChange={(event) => setDescription(event.target.value)}>\n        </textarea>\n        <br/>\n        <button className=\"buttonSaveStyle\" type='submit'>Guardar</button>\n        <img className=\"imgStyle\" src={createImg}></img>\n     \n        <div className=\"v-line\">\n        </div>\n      </form> \n   \n      <div className=\"containerReadStyle\">\n        <Read/>\n      </div>\n    </div>\n  )\n}\nexport default Create;",[],"/Users/mac/Documents/Lim17-lab-note/src/components/EnterApp/Home/Crud/Read/Read.js",[],[],"/Users/mac/Documents/Lim17-lab-note/src/components/EnterApp/Home/Crud/Edit/Edit.js",["71","72","73"],[],"/Users/mac/Documents/Lim17-lab-note/src/components/EnterApp/Home/Crud/Edit/ModalEdit.js",["74"],[],{"ruleId":"75","severity":1,"message":"76","line":46,"column":9,"nodeType":"77","endLine":46,"endColumn":57},{"ruleId":"78","severity":1,"message":"79","line":3,"column":42,"nodeType":"80","messageId":"81","endLine":3,"endColumn":55},{"ruleId":"75","severity":1,"message":"76","line":63,"column":7,"nodeType":"77","endLine":63,"endColumn":63},{"ruleId":"75","severity":1,"message":"76","line":43,"column":9,"nodeType":"77","endLine":43,"endColumn":51},{"ruleId":"78","severity":1,"message":"82","line":3,"column":15,"nodeType":"80","messageId":"81","endLine":3,"endColumn":24},{"ruleId":"78","severity":1,"message":"83","line":8,"column":10,"nodeType":"80","messageId":"81","endLine":8,"endColumn":17},{"ruleId":"78","severity":1,"message":"84","line":8,"column":19,"nodeType":"80","messageId":"81","endLine":8,"endColumn":29},{"ruleId":"78","severity":1,"message":"85","line":9,"column":7,"nodeType":"80","messageId":"81","endLine":9,"endColumn":15},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'updateProfile' is defined but never used.","Identifier","unusedVar","'updateDoc' is defined but never used.","'checked' is assigned a value but never used.","'setChecked' is assigned a value but never used.","'subtitle' is defined but never used."]